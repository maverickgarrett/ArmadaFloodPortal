@*
    SERENE TOP NAV
    Josh Di-Duca

    Add this to the Layout file to install:
    ------------------------------------------------------------------------------
    <div class="collapse navbar-collapse pull-left" id="navbar-collapse">
        <ul class="nav navbar-nav">
            @{Html.RenderPartial(MVC.Views.Shared.TopNavigation, new YourSerenityNamespace.Navigation.NavigationModel()); }
        </ul>
    </div>
    ------------------------------------------------------------------------------
    Under:
    ------------------------------------------------------------------------------
    <a href="#" class="sidebar-toggle" data-toggle="offcanvas" role="button">
        <span class="sr-only">Toggle navigation</span>
    </a>
    ------------------------------------------------------------------------------
*@

@model ArmadaPortal.Navigation.NavigationModel

@helper renderItem(Serenity.Navigation.NavigationItem item, int depth, int[] path, string css = "")
{

    var isactive = true;
    for (var i = 0; i <= depth; i++)
    {
        if (path[i] != Model.ActivePath[i])
        {
            isactive = false;
            break;
        }
    }

    var klass = (isactive ? "active" : "") + (item.Children.IsEmptyOrNull() ? "" : " treeview");
    var icon = (item.IconClass ?? (item.Children.Count > 0 ? "icon-layers" : (depth == 0 ? "icon-link" : "fa-circle-o")));
    var title = (LocalText.TryGet("Navigation." + item.FullPath) ?? item.Title);
    var sectionUrl = (item.Url ?? "javascript:;");
    var target = item.Target; if (target != null) { target += " target=" + target; }
    if (item.Children.Count == 0 && depth != 0)
    {
        <a tabindex="-1" class="dropdown-item" href="@sectionUrl">@title</a>
    }
    else
    {
        <li class="@css">
            @if (item.Children.Count > 0)
            {
                if (depth == 0)
                {
                    <a href="@sectionUrl" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="true">@title <span class="caret"></span></a>
                }
                else
                {
                    <a href="@sectionUrl" class="dropdown-toggle" data-toggle="dropdown" aria-expanded="true">@title</a>
                }
            }
            else
            {
                <a href="@sectionUrl">@title</a>
            }
            @if (item.Children.Count > 0)
            {
                <ul class="dropdown-menu" role="menu">
                    @{path[depth + 1] = 0; }
                    @foreach (var child in item.Children)
                    {
                        @renderItem(child, depth + 1, path, "dropdown-submenu");
                    }
                </ul>
            }
        </li>
    }
    path[depth]++;
}

@{var path = new int[10]; }
@foreach (var item in Model.Items)
{
    @renderItem(item, 0, path, "dropdown");
}

<style>
    .dropdown-submenu {
        position: relative;
    }

        .dropdown-submenu > .dropdown-menu {
            top: 0;
            left: 100%;
            margin-top: -6px;
            margin-left: -1px;
            -webkit-border-radius: 0 6px 6px 6px;
            -moz-border-radius: 0 6px 6px;
            border-radius: 0 6px 6px 6px;
        }

        .dropdown-submenu:hover > .dropdown-menu {
            display: block;
        }

        .dropdown-submenu > a:after {
            display: block;
            content: " ";
            float: right;
            width: 0;
            height: 0;
            border-color: transparent;
            border-style: solid;
            border-width: 5px 0 5px 5px;
            border-left-color: #777;
            margin-top: 5px;
            margin-right: -10px;
        }

        .dropdown-submenu:hover > a:after {
            border-left-color: #fff;
        }

    .dropdown-item {
        display: block;
        padding: 3px 20px;
        clear: both;
        font-weight: normal;
        line-height: 1.42857143;
        white-space: nowrap;
        color: #777;
    }
</style>